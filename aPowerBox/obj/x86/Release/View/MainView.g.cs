#pragma checksum "C:\AMB\aSoftware\aCore\aPowerBox\aPowerBox\View\MainView.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "F517C52769B09A69DCA0B142E1966BF0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace aPowerBox.View
{
    partial class MainView : 
        global::Albert.Flex.Runtime.Page10x, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1:
                {
                    this.splitView = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 2:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element2 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 17 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element2).Click += this.mnu_Click;
                    #line default
                }
                break;
            case 3:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element3 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 19 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element3).Click += this.ham_Click;
                    #line default
                }
                break;
            case 4:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element4 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 21 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element4).Click += this.ham_Click;
                    #line default
                }
                break;
            case 5:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element5 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 24 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element5).Click += this.ham_Click;
                    #line default
                }
                break;
            case 6:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element6 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 26 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element6).Click += this.ham_Click;
                    #line default
                }
                break;
            case 7:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element7 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 28 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element7).Click += this.ham_Click;
                    #line default
                }
                break;
            case 8:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element8 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 31 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element8).Click += this.ham_Click;
                    #line default
                }
                break;
            case 9:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element9 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 33 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element9).Click += this.ham_Click;
                    #line default
                }
                break;
            case 10:
                {
                    global::Albert.Flex.Runtime.HamburgerButton element10 = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 36 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)element10).Click += this.ham_Click;
                    #line default
                }
                break;
            case 11:
                {
                    this.frame = (global::Windows.UI.Xaml.Controls.Frame)(target);
                }
                break;
            case 12:
                {
                    this.hamMenu = (global::Albert.Flex.Runtime.HamburgerButton)(target);
                    #line 54 "..\..\..\View\MainView.xaml"
                    ((global::Albert.Flex.Runtime.HamburgerButton)this.hamMenu).Click += this.mnu_Click;
                    #line default
                }
                break;
            case 13:
                {
                    this.tbStatus = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

